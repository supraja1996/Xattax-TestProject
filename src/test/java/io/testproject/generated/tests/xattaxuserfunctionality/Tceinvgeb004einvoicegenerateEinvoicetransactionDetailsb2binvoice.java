package io.testproject.generated.tests.xattaxuserfunctionality;

import io.testproject.addon.RandomDataGenerator;
import io.testproject.sdk.drivers.ReportingDriver;
import io.testproject.sdk.interfaces.junit5.ExceptionsReporter;
import java.lang.Exception;
import java.lang.Override;
import java.lang.String;
import java.util.concurrent.TimeUnit;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.support.ui.Select;

/**
 * This class was automatically generated by TestProject
 * Project: Xattax User Functionality
 * Test: TC_Einv_GEB_004_E-invoice _Generate E-invoice _Transaction Details_B2B_Invoice
 * Generated by: Supraja Nauduri (srilakshmi.supraja@sailotech.com)
 * Generated on Tue Dec 14 12:41:26 GMT 2021.
 */
public class Tceinvgeb004einvoicegenerateEinvoicetransactionDetailsb2binvoice implements Test, ExceptionsReporter {
  public static WebDriver driver;

  /**
   * ApplicationURL test parameter
   */
  public String ApplicationURL = "http://192.168.1.11/XATTAXEInvoice2.0/";

  /**
   * username test parameter
   */
  public String username = "envuser";

  /**
   * password test parameter
   */
  public String password = "";

  /**
   * dashboard test parameter
   */
  public String dashboard = "";

  /**
   * importEInvoice test parameter
   */
  public String importEInvoice = "";

  /**
   * generatedEInvoicesNumber test parameter
   */
  public String generatedEInvoicesNumber = "";

  /**
   * numberOfEntries test parameter
   */
  public String numberOfEntries = "";

  /**
   * entriesCount test parameter
   */
  public String entriesCount = "";

  /**
   * entriesNumber test parameter
   */
  public String entriesNumber = "";

  /**
   * monthOnDashBoard test parameter
   */
  public String monthOnDashBoard = "";

  /**
   * monthConverted test parameter
   */
  public String monthConverted = "";

  /**
   * monthExtracted test parameter
   */
  public String monthExtracted = "";

  /**
   * yearExtracted test parameter
   */
  public String yearExtracted = "";

  /**
   * SupplyType test parameter
   */
  public String SupplyType = "";

  /**
   * monthOnCalendar test parameter
   */
  public String monthOnCalendar = "";

  /**
   * extractedMonth test parameter
   */
  public String extractedMonth = "";

  /**
   * month test parameter
   */
  public String month = "";

  /**
   * documentNumber test parameter
   */
  public String documentNumber = "";

  /**
   * buyerName test parameter
   */
  public String buyerName = "";

  /**
   * documentDate test parameter
   */
  public String documentDate = "";

  /**
   * supplierLocation test parameter
   */
  public String supplierLocation = "";

  /**
   * buyerGSTIN test parameter
   */
  public String buyerGSTIN = "";

  /**
   * placeOfSupply test parameter
   */
  public String placeOfSupply = "";

  /**
   * buyerLocation test parameter
   */
  public String buyerLocation = "";

  /**
   * buyerAddress test parameter
   */
  public String buyerAddress = "";

  /**
   * buyerPincode test parameter
   */
  public String buyerPincode = "";

  /**
   * buyerState test parameter
   */
  public String buyerState = "";

  /**
   * itemDesc test parameter
   */
  public String itemDesc = "";

  /**
   * isService test parameter
   */
  public String isService = "";

  /**
   * hsnCode test parameter
   */
  public String hsnCode = "";

  /**
   * qty test parameter
   */
  public String qty = "";

  /**
   * itemPrice test parameter
   */
  public String itemPrice = "";

  /**
   * gstRate test parameter
   */
  public String gstRate = "";

  /**
   * SupplierPincode test parameter
   */
  public String SupplierPincode = "";

  public void execute(WebDriver parentDriver) throws Exception {
    driver = parentDriver;
    // set timeout for driver actions (similar to step timeout)
    driver.manage().timeouts().implicitlyWait(15000, TimeUnit.MILLISECONDS);
    By by;
    boolean booleanResult;
    RandomDataGenerator.GenerateName generateName;
    RandomDataGenerator.GenerateNumberInRange generateNumberInRange;

    // 1. Click 'invoiceType'
    //    Click on Invoice Type
    GeneratedUtils.sleep(500);
    by = By.xpath("//div/select[contains(@id ,\"invoiceType\")]");
    driver.findElement(by).click();

    // 2. Select the 'INV' option in 'invoiceType'
    GeneratedUtils.sleep(500);
    by = By.xpath("//div/select[contains(@id ,\"invoiceType\")]");
    (new Select(driver.findElement(by))).selectByValue("INV");

    // 3. Generate random number between '1000' and '100000'
    GeneratedUtils.sleep(500);
    generateNumberInRange = RandomDataGenerator.generateNumberInRange("1000","100000");
    generateNumberInRange = (RandomDataGenerator.GenerateNumberInRange)((ReportingDriver)driver).addons().execute(generateNumberInRange);
    documentNumber = String.valueOf(generateNumberInRange.result);

    // 4. Click 'Document Number'
    //    Click on Document Number
    GeneratedUtils.sleep(500);
    by = By.xpath("//label[contains(text(),\"Document Number\")]/../../descendant::div/input");
    driver.findElement(by).click();

    // 5. Type '{{documentNumber}}' in 'Document Number'
    //    Enter the Document Number
    GeneratedUtils.sleep(500);
    by = By.xpath("//label[contains(text(),\"Document Number\")]/../../descendant::div/input");
    driver.findElement(by).sendKeys(documentNumber);

    // 6. Click 'docDt'
    //    Click on Document Date
    GeneratedUtils.sleep(500);
    by = By.xpath("//label[contains(text(),\"Document Date\")]/../../descendant::div/input");
    driver.findElement(by).click();

    // 7. Type '{{documentDate}}' in 'docDt'
    //    Enter the Document Date
    GeneratedUtils.sleep(500);
    by = By.xpath("//label[contains(text(),\"Document Date\")]/../../descendant::div/input");
    driver.findElement(by).sendKeys(documentDate);

    // 8. Click 'Supplier Location'
    //    Click on Supplier Location
    GeneratedUtils.sleep(500);
    by = By.xpath("//label[contains(text(),\"Supplier Location\")]/../../descendant::div/input");
    driver.findElement(by).click();

    // 9. Type '{{supplierLocation}}' in 'Supplier Location'
    //    Select Jammu & Kashmir
    GeneratedUtils.sleep(500);
    by = By.xpath("//label[contains(text(),\"Supplier Location\")]/../../descendant::div/input");
    driver.findElement(by).sendKeys(supplierLocation);

    // 10. Click 'Supplier Pincode'
    /* Step is disabled
    GeneratedUtils.sleep(500);
    by = By.xpath("//label[contains(text(),\"Supplier Pincode\")]/../../descendant::div/input");
    driver.findElement(by).click();
    */
    // 11. Clear 'Supplier Pincode' contents
    /* Step is disabled
    GeneratedUtils.sleep(500);
    by = By.xpath("//label[contains(text(),\"Supplier Pincode\")]/../../descendant::div/input");
    driver.findElement(by).clear();
    */
    // 12. Type '{{SupplierPincode}}' in 'Supplier Pincode'
    /* Step is disabled
    GeneratedUtils.sleep(500);
    by = By.xpath("//label[contains(text(),\"Supplier Pincode\")]/../../descendant::div/input");
    driver.findElement(by).sendKeys(SupplierPincode);
    */
    // 13. Click 'Buyer GSTIN'
    //    Click on Buyer GSTIN
    GeneratedUtils.sleep(500);
    by = By.xpath("//label[contains(text(),\"Buyer GSTIN\")]/../../descendant::div/input");
    driver.findElement(by).click();

    // 14. Type '{{buyerGSTIN}}' in 'Buyer GSTIN'
    GeneratedUtils.sleep(500);
    by = By.xpath("//label[contains(text(),\"Buyer GSTIN\")]/../../descendant::div/input");
    driver.findElement(by).sendKeys(buyerGSTIN);

    // 15. Generate random name
    GeneratedUtils.sleep(500);
    generateName = RandomDataGenerator.getGenerateName();
    generateName = (RandomDataGenerator.GenerateName)((ReportingDriver)driver).addons().execute(generateName);
    buyerName = String.valueOf(generateName.result);

    // 16. Click 'Buyer Legal Name'
    //    Click on Buyer Legal Name
    GeneratedUtils.sleep(500);
    by = By.xpath("//label[contains(text(),\"Buyer Legal Name\")]/../../descendant::div/input");
    driver.findElement(by).click();

    // 17. Type '{{buyerName}}' in 'Buyer Legal Name'
    GeneratedUtils.sleep(500);
    by = By.xpath("//label[contains(text(),\"Buyer Legal Name\")]/../../descendant::div/input");
    driver.findElement(by).sendKeys(buyerName);

    // 18. Click 'Buyer Location'
    //    Click on Buyer Location 
    GeneratedUtils.sleep(500);
    by = By.xpath("//label[contains(text(),\"Buyer Location\")]/../../descendant::div/input");
    driver.findElement(by).click();

    // 19. Type '{{buyerLocation}}' in 'Buyer Location'
    GeneratedUtils.sleep(500);
    by = By.xpath("//label[contains(text(),\"Buyer Location\")]/../../descendant::div/input");
    driver.findElement(by).sendKeys(buyerLocation);

    // 20. Click 'Place Of Supply'
    //    Click on Place of Supply
    GeneratedUtils.sleep(500);
    by = By.xpath("//label[contains(text(),\"Place Of Supply\")]/../../descendant::div/select");
    driver.findElement(by).click();

    // 21. Select the '{{placeOfSupply}}' option in 'Place Of Supply'
    GeneratedUtils.sleep(500);
    by = By.xpath("//label[contains(text(),\"Place Of Supply\")]/../../descendant::div/select");
    (new Select(driver.findElement(by))).selectByValue(placeOfSupply);

    // 22. Click 'Buyer Address'
    //    Click on Buyer Address
    GeneratedUtils.sleep(500);
    by = By.xpath("//label[contains(text(),\"Buyer Address\")]/../../descendant::div/textarea");
    driver.findElement(by).click();

    // 23. Type '{{buyerAddress}}' in 'Buyer Address'
    //    Enter the Buyer Address
    GeneratedUtils.sleep(500);
    by = By.xpath("//label[contains(text(),\"Buyer Address\")]/../../descendant::div/textarea");
    driver.findElement(by).sendKeys(buyerAddress);

    // 24. Click 'BuyerStcd'
    //    Click on Buyer State 
    GeneratedUtils.sleep(500);
    by = By.xpath("//label[contains(text(),\"Buyer State\")]/../../descendant::div/select");
    driver.findElement(by).click();

    // 25. Select the '{{buyerState}}' option in 'BuyerStcd'
    //    Select the state from the list
    GeneratedUtils.sleep(500);
    by = By.xpath("//label[contains(text(),\"Buyer State\")]/../../descendant::div/select");
    (new Select(driver.findElement(by))).selectByValue(buyerState);

    // 26. Click 'Buyer Pincode'
    //    Click on Buyer Pincode
    GeneratedUtils.sleep(500);
    by = By.xpath("//label[contains(text(),\"Buyer Pincode\")]/../../descendant::div/input");
    driver.findElement(by).click();

    // 27. Type '{{buyerPincode}}' in 'Buyer Pincode'
    //    Enter Pincode in Buyer Pincode
    GeneratedUtils.sleep(500);
    by = By.xpath("//label[contains(text(),\"Buyer Pincode\")]/../../descendant::div/input");
    driver.findElement(by).sendKeys(buyerPincode);

    // 28. Click 'Add Line'
    //    Click on Add Line Button to Add new Line
    GeneratedUtils.sleep(500);
    by = By.cssSelector("#addLine");
    driver.findElement(by).click();

    // 29. Click 'prdDesc'
    //    Click on product description
    GeneratedUtils.sleep(500);
    by = By.xpath("//div[contains(@class ,\"sales_invoice_box\" )]/descendant::table/descendant::td/div[@class=\"input\"]/input[contains(@name,\"prdDesc\")]");
    driver.findElement(by).click();

    // 30. Type '{{itemDesc}}' in 'prdDesc'
    //    Enter Product Description
    GeneratedUtils.sleep(500);
    by = By.xpath("//div[contains(@class ,\"sales_invoice_box\" )]/descendant::table/descendant::td/div[@class=\"input\"]/input[contains(@name,\"prdDesc\")]");
    driver.findElement(by).sendKeys(itemDesc);

    // 31. Click 'isServc'
    //    Click on is service option
    GeneratedUtils.sleep(500);
    by = By.xpath("//div[contains(@class ,\"sales_invoice_box\" )]/descendant::table/descendant::td/select");
    driver.findElement(by).click();

    // 32. Select the '{{isService}}' option in 'isServc'
    //    Select the option for Is Service
    GeneratedUtils.sleep(500);
    by = By.xpath("//div[contains(@class ,\"sales_invoice_box\" )]/descendant::table/descendant::td/select");
    (new Select(driver.findElement(by))).selectByValue(isService);

    // 33. Click 'hsnCd0'
    //    Click on HSN Code
    GeneratedUtils.sleep(500);
    by = By.xpath("//div[contains(@class ,\"sales_invoice_box\" )]/descendant::table/descendant::td/div[@class=\"input\"]/input[contains(@name,\"hsnCd\")]");
    driver.findElement(by).click();

    // 34. Type '{{hsnCode}}' in 'hsnCd0'
    //    Enter the HSN Code
    GeneratedUtils.sleep(500);
    by = By.xpath("//div[contains(@class ,\"sales_invoice_box\" )]/descendant::table/descendant::td/div[@class=\"input\"]/input[contains(@name,\"hsnCd\")]");
    driver.findElement(by).sendKeys(hsnCode);

    // 35. Click 'qty'
    //    Click on Quantity
    GeneratedUtils.sleep(500);
    by = By.xpath("//div[contains(@class ,\"sales_invoice_box\" )]/descendant::table/descendant::td/div[@class=\"input\"]/input[contains(@name,\"qty\")]");
    driver.findElement(by).click();

    // 36. Type '{{qty}}' in 'qty'
    //    Enter the Quantity
    GeneratedUtils.sleep(500);
    by = By.xpath("//div[contains(@class ,\"sales_invoice_box\" )]/descendant::table/descendant::td/div[@class=\"input\"]/input[contains(@name,\"qty\")]");
    driver.findElement(by).sendKeys(qty);

    // 37. Click 'unit0'
    //    Click on Unit
    GeneratedUtils.sleep(500);
    by = By.xpath("//div[contains(@class ,\"sales_invoice_box\" )]/descendant::table/descendant::td/div/select");
    driver.findElement(by).click();

    // 38. Select the 'KGS' option in 'unit0'
    //    Select the option from the list
    GeneratedUtils.sleep(500);
    by = By.xpath("//div[contains(@class ,\"sales_invoice_box\" )]/descendant::table/descendant::td/div/select");
    (new Select(driver.findElement(by))).selectByValue("KGS");

    // 39. Click 'unitPrice0'
    GeneratedUtils.sleep(500);
    by = By.xpath("//div[contains(@class ,\"sales_invoice_box\" )]/descendant::table/descendant::td/div[@class=\"input\"]/input[contains(@name,\"unitPrice\")]");
    driver.findElement(by).click();

    // 40. Type '{{itemPrice}}' in 'unitPrice0'
    //    Enter the unit price 
    GeneratedUtils.sleep(500);
    by = By.xpath("//div[contains(@class ,\"sales_invoice_box\" )]/descendant::table/descendant::td/div[@class=\"input\"]/input[contains(@name,\"unitPrice\")]");
    driver.findElement(by).sendKeys(itemPrice);

    // 41. Click 'gstRate'
    //    Click on GST Rate
    GeneratedUtils.sleep(500);
    by = By.xpath("//div[contains(@class ,\"sales_invoice_box\" )]/descendant::table/descendant::td/div[@class=\"input\"]/select[contains(@name,\"gstRate\")]");
    driver.findElement(by).click();

    // 42. Type '{{gstRate}}' in 'gstRate'
    //    Enter gst rate
    GeneratedUtils.sleep(500);
    by = By.xpath("//div[contains(@class ,\"sales_invoice_box\" )]/descendant::table/descendant::td/div[@class=\"input\"]/select[contains(@name,\"gstRate\")]");
    driver.findElement(by).sendKeys(gstRate);

    // 43. Click 'Save and Generate IRN'
    //    Click Save and Generate IRN
    GeneratedUtils.sleep(500);
    by = By.xpath("//button[@id = \"generate\"]");
    driver.findElement(by).click();

    // 44. Is 'E-Invoice Details' present?
    //    Validate E-Invoice Details
    GeneratedUtils.sleep(500);
    by = By.xpath("//h1[. = 'e-Invoice\n						Details']");
    driver.findElement(by);

    // 45. Is 'IRN Details' present?
    //    Validate IRN Details generated
    GeneratedUtils.sleep(500);
    by = By.xpath("//div[. = 'IRN Details']");
    driver.findElement(by);

  }

  @Override
  public ReportingDriver getDriver() {
    return (ReportingDriver) driver;
  }
}
